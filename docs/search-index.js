var N = null;var searchIndex = {};
searchIndex["eosio"]={"doc":"","items":[[4,"ParseNameError","eosio","",N,N],[13,"IsEmpty","","",0,N],[13,"TooLong","","",0,N],[13,"BadChar","","",0,N],[4,"ParseSymbolError","","",N,N],[13,"IsEmpty","","",1,N],[13,"TooLong","","",1,N],[13,"BadChar","","",1,N],[3,"AccountName","","",N,N],[3,"PermissionName","","",N,N],[3,"Permission","","A permission",N,N],[12,"account","","",2,N],[12,"permission","","",2,N],[3,"RamBytes","","",N,N],[3,"NetWeight","","",N,N],[3,"CpuWeight","","",N,N],[3,"ActionName","","",N,N],[3,"Action","","",N,N],[12,"account","","",3,N],[12,"name","","",3,N],[12,"authorization","","",3,N],[12,"data","","",3,N],[3,"ActionId","","",N,N],[3,"Asset","","",N,N],[12,"amount","","",4,N],[12,"symbol","","",4,N],[3,"ExtendedAsset","","",N,N],[12,"quantity","","",5,N],[12,"contract","","",5,N],[3,"Ripemd160","","",N,N],[3,"Sha1","","",N,N],[3,"Sha256","","",N,N],[3,"Sha512","","",N,N],[3,"SymbolName","","",N,N],[3,"Symbol","","",N,N],[3,"ExtendedSymbol","","",N,N],[12,"symbol","","",6,N],[12,"contract","","",6,N],[3,"TableScope","","",N,N],[3,"PrimaryTableName","","",N,N],[3,"PrimaryTableCursor","","",N,N],[3,"PrimaryTableIterator","","",N,N],[3,"PrimaryTableIndex","","",N,N],[3,"SecondaryTableName","","",N,N],[3,"SecondaryTableCursor","","",N,N],[3,"SecondaryTableIterator","","",N,N],[3,"SecondaryTableIndex","","",N,N],[3,"Time","","",N,N],[3,"TimeSpan","","",N,N],[4,"ReadError","","",N,N],[13,"NotEnoughBytes","","",7,N],[4,"WriteError","","",N,N],[13,"NotEnoughSpace","","",8,N],[13,"TryFromIntError","","",8,N],[5,"require_auth","","Verifies that `name` exists in the set of provided auths on a action. Throws if not found.",N,[[["a"]]]],[5,"require_permission","","Verifies that `name` exists in the set of provided auths on a action. Throws if not found.",N,[[["a"],["p"]]]],[5,"require_recipient","","Add the specified account to set of accounts to be notified",N,[[["a"]]]],[5,"eosio_exit","","This method will abort execution of wasm without failing the contract. This is used to bypass all cleanup / destructors that would normally be called.",N,[[["c"]]]],[5,"eosio_assert","","Aborts processing of this action and unwinds all pending changes if the test condition is true",N,[[["bool"],["str"]]]],[5,"eosio_assert_code","","Aborts processing of this action and unwinds all pending changes if the test condition is true",N,[[["bool"],["c"]]]],[11,"active","","",2,[[["accountname"]],["permission"]]],[11,"owner","","",2,[[["accountname"]],["permission"]]],[11,"receiver","","Get the current receiver of the action.",9,[[],["self"]]],[11,"has_auth","","Verifies that `name` name has auth.",9,[[["self"]],["bool"]]],[11,"is_privileged","","Check if an account is privileged",9,[[["self"]],["bool"]]],[11,"is_account","","Verifies that `name` is an account.",9,[[["self"]],["bool"]]],[11,"creation_time","","Returns the creation time of an account",9,[[["self"]],["time"]]],[11,"permission_last_used","","Returns the last used time of a permission",9,[[["self"],["p"]],["time"]]],[11,"require_auth","","Verifies that `name` exists in the set of provided auths on a action. Throws if not found.",9,[[["self"]]]],[11,"require_permission","","Verifies that `name` exists in the set of provided auths on a action. Throws if not found.",9,[[["self"],["p"]]]],[11,"require_recipient","","Add the specified account to set of accounts to be notified",9,[[["self"]]]],[11,"active_producers","","",9,N],[11,"get_resource_limits","","",9,N],[11,"send_inline","","",3,[[["self"]],["result",["writeerror"]]]],[11,"send_deferred","","",3,[[["self"],["actionid"],["p"],["bool"]],["result",["writeerror"]]]],[11,"cancel_deferred","","",3,[[["actionid"]],["result"]]],[11,"is_valid","","",4,[[["self"]],["bool"]]],[11,"is_valid","","",10,[[["self"]],["bool"]]],[11,"precision","","",11,[[["self"]],["u64"]]],[11,"name","","",11,[[["self"]],["symbolname"]]],[11,"name_length","","",11,[[["self"]],["usize"]]],[11,"value","","",11,[[["self"]],["u64"]]],[11,"is_valid","","",11,[[["self"]],["bool"]]],[11,"new","","",12,[[["c"],["s"],["n"]],["self"]]],[11,"exists","","",12,[[["self"],["id"]],["bool"]]],[11,"find","","",12,[[["self"],["id"]],["option",["primarytablecursor"]]]],[11,"available_primary_key","","",12,[[["self"]],["option",["u64"]]]],[11,"new","","",13,[[["primarytablename"],["usize"]],["self"]]],[11,"new","","",14,[[["c"],["s"],["n"],["k"],["usize"]],["secondarytableindex"]]],[18,"MICROSECOND","","",15,N],[18,"MILLISECOND","","",15,N],[18,"SECOND","","",15,N],[11,"now","","",15,[[],["self"]]],[11,"publication","","",15,[[],["self"]]],[11,"expiration","","",15,[[],["self"]]],[11,"zero","","",15,[[],["self"]]],[11,"is_zero","","",15,[[["self"]],["bool"]]],[11,"microseconds","","",15,[[["self"]],["u64"]]],[11,"from_microseconds","","",15,[[["u64"]],["self"]]],[11,"milliseconds","","",15,[[["self"]],["u64"]]],[11,"from_milliseconds","","",15,[[["u64"]],["self"]]],[11,"seconds","","",15,[[["self"]],["u32"]]],[11,"from_seconds","","",15,[[["u32"]],["self"]]],[0,"sys","","",N,N],[0,"ctypes","eosio::sys","",N,N],[6,"c_char","eosio::sys::ctypes","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_short","","",N,N],[6,"c_longlong","","",N,N],[6,"c_uchar","","",N,N],[6,"c_ushort","","",N,N],[6,"c_ulonglong","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[4,"c_void","","",N,N],[6,"uint128_t","","",N,N],[3,"NulError","","An error indicating that an interior nul byte was found.",N,N],[3,"CString","","A type representing an owned, C-compatible, nul-terminated string with no nul bytes in the middle.",N,N],[3,"OsStr","","Borrowed reference to an OS string (see [`OsString`]).",N,N],[3,"OsString","","A type that can represent owned, mutable platform-native strings, but is cheaply inter-convertible with Rust strings.",N,N],[3,"CStr","","Representation of a borrowed C string.",N,N],[6,"int128_t","","",N,N],[3,"FromBytesWithNulError","","An error indicating that a nul byte was not in the expected position.",N,N],[3,"IntoStringError","","An error indicating invalid UTF-8 when converting a [`CString`] into a [`String`].",N,N],[4,"ParseNameError","eosio::sys","",N,N],[13,"IsEmpty","","",0,N],[13,"TooLong","","",0,N],[13,"BadChar","","",0,N],[5,"string_to_name","","",N,[[["str"]],["result",["u64","parsenameerror"]]]],[17,"NAME_CHARS","","",N,N],[5,"name_to_string","","",N,[[["u64"]],["string"]]],[4,"ParseSymbolError","","",N,N],[13,"IsEmpty","","",1,N],[13,"TooLong","","",1,N],[13,"BadChar","","",1,N],[5,"string_to_symbol","","",N,[[["u8"],["str"]],["result",["u64","parsesymbolerror"]]]],[5,"symbol_name_length","","",N,[[["u64"]],["usize"]]],[5,"printn","","Prints a 64 bit names as base32 encoded string @brief Prints a 64 bit names as base32 encoded string @param name - 64 bit name to be printed",N,N],[5,"printui128","","Prints value as a 128 bit unsigned integer @brief Prints value as a 128 bit unsigned integer @param value is a pointer to the 128 bit unsigned integer to be printed",N,N],[5,"db_idx128_remove","","Remove a table row from a secondary 128-bit integer index table",N,N],[5,"assert_ripemd160","","Tests if the ripemod160 hash generated from data matches the provided checksum. @brief Tests if the ripemod160 hash generated from data matches the provided checksum.",N,N],[5,"ripemd160","","Hashes `data` using `ripemod160` and stores result in memory pointed to by hash. @brief Hashes `data` using `ripemod160` and stores result in memory pointed to by hash.",N,N],[5,"prints","","Prints string @brief Prints string @param cstr - a null terminated string",N,N],[5,"db_idx128_find_primary","","Find a table row in a secondary 128-bit integer index table by primary key",N,N],[5,"db_idx256_next","","Find the table row following the referenced table row in a secondary 256-bit index table",N,N],[5,"db_idx64_lowerbound","","Find the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key",N,N],[3,"capi_checksum256","","@brief 256-bit hash @details 256-bit hash",N,N],[12,"hash","","",16,N],[5,"printui","","Prints value as a 64 bit unsigned integer @brief Prints value as a 64 bit unsigned integer @param value of 64 bit unsigned integer to be printed",N,N],[5,"publication_time","","Returns the time in microseconds from 1970 of the publication_time @brief Get the publication time @return the time in microseconds from 1970 of the publication_time",N,[[],["u64"]]],[5,"is_account","","",N,[[["u64"]],["bool"]]],[5,"db_idx_long_double_lowerbound","","Find the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key",N,N],[5,"db_idx64_next","","Find the table row following the referenced table row in a secondary 64-bit integer index table",N,N],[5,"db_idx_double_next","","Find the table row following the referenced table row in a secondary double-precision floating-point index table",N,N],[5,"eosio_assert","","Aborts processing of this action and unwinds all pending changes if the test condition is true @brief Aborts processing of this action and unwinds all pending changes @param test - 0 to abort, 1 to ignore",N,N],[3,"capi_checksum160","","@brief 160-bit hash @details 160-bit hash",N,N],[12,"hash","","",17,N],[12,"__bindgen_padding_0","","",17,N],[5,"db_idx_long_double_remove","","Remove a table row from a secondary quadruple-precision floating-point index table",N,N],[5,"get_account_creation_time","","@brief Returns the creation time of an account",N,[[["u64"]],["i64"]]],[5,"current_receiver","","Get the current receiver of the action @brief Get the current receiver of the action @return the account which specifies the current receiver of the action",N,[[],["u64"]]],[5,"db_idx64_store","","Store an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table",N,N],[5,"db_idx_long_double_previous","","Find the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table",N,N],[5,"require_auth","","Verifies that @ref name exists in the set of provided auths on a action. Throws if not found.",N,N],[5,"eosio_exit","","This method will abort execution of wasm without failing the contract. This is used to bypass all cleanup / destructors that would normally be called. @brief Aborts execution of wasm without failing the contract @param code - the exit code Example:",N,N],[5,"tapos_block_prefix","","Gets the block prefix used for TAPOS on the currently executing transaction.",N,[[],["i32"]]],[5,"db_idx_long_double_upperbound","","Find the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key",N,N],[5,"db_idx_long_double_update","","Update an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table",N,N],[5,"recover_key","","Calculates the public key used for a given signature and hash used to create a message. @brief Calculates the public key used for a given signature and hash used to create a message.",N,N],[5,"activate_feature","","@brief Activate new feature Activate new feature @param f - name (identifier) of the feature to be activated",N,N],[5,"db_idx_double_find_primary","","Find a table row in a secondary double-precision floating-point index table by primary key",N,N],[5,"db_idx256_lowerbound","","Find the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key (uses lexicographical ordering on the 256-bit keys)",N,N],[5,"db_idx256_remove","","Remove a table row from a secondary 256-bit index table",N,N],[5,"has_auth","","Verifies that @ref name has auth.",N,[[["u64"]],["bool"]]],[5,"db_idx256_find_primary","","Find a table row in a secondary 256-bit index table by primary key",N,N],[5,"db_idx128_lowerbound","","Find the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key",N,N],[5,"printqf","","Prints value as quadruple-precision floating point number @brief Prints value as quadruple-precision floating point number (i.e. long double) @param value is a pointer to the long double to be printed",N,N],[5,"db_idx128_upperbound","","Find the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key",N,N],[5,"printsf","","Prints value as single-precision floating point number @brief Prints value as single-precision floating point number (i.e. float) @param value of float to be printed",N,N],[5,"db_idx128_previous","","Find the table row preceding the referenced table row in a secondary 128-bit integer index table",N,N],[5,"get_active_producers","","Gets the set of active producers. @brief Gets the set of active producers.",N,N],[5,"sha512","","Hashes `data` using `sha512` and stores result in memory pointed to by hash. @brief Hashes `data` using `sha512` and stores result in memory pointed to by hash.",N,N],[5,"db_idx256_previous","","Find the table row preceding the referenced table row in a secondary 256-bit index table",N,N],[5,"db_idx128_next","","Find the table row following the referenced table row in a secondary 128-bit integer index table",N,N],[5,"printi128","","Prints value as a 128 bit signed integer @brief Prints value as a 128 bit signed integer @param value is a pointer to the 128 bit signed integer to be printed",N,N],[5,"db_idx256_find_secondary","","Find a table row in a secondary 256-bit index table by secondary key",N,N],[5,"assert_sha256","","Tests if the sha256 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. @brief Tests if the sha256 hash generated from data matches the provided checksum.",N,N],[5,"assert_sha1","","Tests if the sha1 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. @brief Tests if the sha1 hash generated from data matches the provided checksum.",N,N],[5,"db_idx256_upperbound","","Find the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key (uses lexicographical ordering on the 256-bit keys)",N,N],[5,"get_context_free_data","","Retrieve the signed_transaction.context_free_data[index].",N,N],[5,"printhex","","",N,N],[5,"get_action","","Retrieves the indicated action from the active transaction.",N,N],[5,"db_idx_long_double_find_secondary","","Find a table row in a secondary quadruple-precision floating-point index table by secondary key",N,N],[3,"capi_checksum512","","@brief 512-bit hash @details 512-bit hash",N,N],[12,"hash","","",18,N],[5,"db_idx64_find_secondary","","Find a table row in a secondary 64-bit integer index table by secondary key",N,N],[5,"printi","","Prints value as a 64 bit signed integer @brief Prints value as a 64 bit signed integer @param value of 64 bit signed integer to be printed",N,N],[5,"db_idx64_previous","","Find the table row preceding the referenced table row in a secondary 64-bit integer index table",N,N],[5,"db_idx_double_previous","","Find the table row preceding the referenced table row in a secondary double-precision floating-point index table",N,N],[5,"get_permission_last_used","","@brief Returns the last used time of a permission",N,[[["u64"],["u64"]],["i64"]]],[5,"db_idx_long_double_next","","Find the table row following the referenced table row in a secondary quadruple-precision floating-point index table",N,N],[5,"action_data_size","","Get the length of the current action's data field. This method is useful for dynamically sized actions",N,[[],["u32"]]],[5,"transaction_size","","Gets the size of the currently executing transaction.",N,[[],["usize"]]],[5,"db_idx_double_end","","Get an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table",N,[[["u64"],["u64"],["u64"]],["i32"]]],[6,"capi_name","","",N,N],[5,"set_blockchain_parameters_packed","","@brief Set the blockchain parameters Set the blockchain parameters @param data - pointer to blockchain parameters packed as bytes @param datalen - size of the packed blockchain parameters @pre `data` is a valid pointer to a range of memory at least `datalen` bytes long that contains packed blockchain params data",N,N],[5,"db_lowerbound_i64","","Find the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key The table row that matches the lowerbound condition is the first table row in the table with the lowest primary key that is >= the given key",N,[[["u64"],["u64"],["u64"],["u64"]],["i32"]]],[5,"read_action_data","","Copy up to @ref len bytes of current action data to the specified location",N,N],[5,"expiration","","Gets the expiration of the currently executing transaction.",N,[[],["u32"]]],[5,"db_remove_i64","","Remove a record from a primary 64-bit integer index table",N,N],[5,"get_resource_limits","","@brief Get the resource limits of an account Get the resource limits of an account @param account - name of the account whose resource limit to get @param ram_bytes - pointer to `int64_t` to hold retrieved ram limit in absolute bytes @param net_weight - pointer to `int64_t` to hold net limit @param cpu_weight - pointer to `int64_t` to hold cpu limit",N,N],[5,"db_idx_double_find_secondary","","Find a table row in a secondary double-precision floating-point index table by secondary key",N,N],[5,"db_idx_double_store","","Store an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table",N,N],[5,"require_auth2","","Verifies that @ref name exists in the set of provided auths on a action. Throws if not found.",N,N],[5,"db_idx256_store","","Store an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table",N,N],[5,"eosio_assert_message","","Aborts processing of this action and unwinds all pending changes if the test condition is true @brief Aborts processing of this action and unwinds all pending changes @param test - 0 to abort, 1 to ignore @param msg - a pointer to the start of string explaining the reason for failure @param msg_len - length of the string",N,N],[5,"eosio_assert_code","","Aborts processing of this action and unwinds all pending changes if the test condition is true @brief Aborts processing of this action and unwinds all pending changes @param test - 0 to abort, 1 to ignore @param code - the error code",N,N],[5,"read_transaction","","Access a copy of the currently executing transaction.",N,N],[5,"db_store_i64","","Store a record in a primary 64-bit integer index table",N,N],[5,"db_idx256_end","","Get an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table",N,[[["u64"],["u64"],["u64"]],["i32"]]],[5,"assert_recover_key","","Tests a given public key with the generated key from digest and the signature. @brief Tests a given public key with the generated key from digest and the signature.",N,N],[5,"db_idx128_update","","Update an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table",N,N],[5,"require_recipient","","Add the specified account to set of accounts to be notified",N,N],[5,"sha256","","Hashes `data` using `sha256` and stores result in memory pointed to by hash. @brief Hashes `data` using `sha256` and stores result in memory pointed to by hash.",N,N],[5,"db_idx64_upperbound","","Find the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key",N,N],[5,"prints_l","","Prints string up to given length @brief Prints string @param cstr - pointer to string @param len - len of string to be printed",N,N],[5,"send_context_free_inline","","Send an inline context free action in the context of this action's parent transaction",N,N],[5,"send_inline","","Send an inline action in the context of this action's parent transaction",N,N],[5,"cancel_deferred","","Cancels a deferred transaction.",N,N],[5,"set_proposed_producers","","Proposes a schedule change, once the block that contains the proposal becomes irreversible, the schedule is promoted to \"pending\" automatically. Once the block that promotes the schedule is irreversible, the schedule will become \"active\" @param producer_data - packed data of produce_keys in the appropriate producer schedule order @param producer_data_size - size of the data buffer",N,N],[5,"db_idx64_find_primary","","Find a table row in a secondary 64-bit integer index table by primary key",N,N],[5,"db_find_i64","","Find a table row in a primary 64-bit integer index table by primary key",N,[[["u64"],["u64"],["u64"],["u64"]],["i32"]]],[5,"db_previous_i64","","Find the table row preceding the referenced table row in a primary 64-bit integer index table",N,N],[5,"tapos_block_num","","Gets the block number used for TAPOS on the currently executing transaction.",N,[[],["i32"]]],[5,"db_next_i64","","Find the table row following the referenced table row in a primary 64-bit integer index table",N,N],[5,"db_idx64_remove","","Remove a table row from a secondary 64-bit integer index table",N,N],[5,"db_idx_double_remove","","Remove a table row from a secondary double-precision floating-point index table",N,N],[5,"check_permission_authorization","","@brief Checks if a permission is authorized by a provided delay and a provided set of keys and permissions",N,N],[5,"db_upperbound_i64","","Find the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key The table row that matches the upperbound condition is the first table row in the table with the lowest primary key that is > the given key",N,[[["u64"],["u64"],["u64"],["u64"]],["i32"]]],[5,"check_transaction_authorization","","@brief Checks if a transaction is authorized by a provided set of keys and permissions",N,N],[5,"set_privileged","","@brief Set the privileged status of an account Set the privileged status of an account @param account - name of the account whose privileged account to be set @param is_priv - privileged status",N,N],[5,"db_idx_double_lowerbound","","Find the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key",N,N],[5,"db_idx_double_upperbound","","Find the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key",N,N],[5,"db_idx64_update","","Update an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table",N,N],[5,"db_idx_double_update","","Update an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table",N,N],[5,"db_idx_long_double_store","","Store an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table",N,N],[5,"db_end_i64","","Get an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table",N,[[["u64"],["u64"],["u64"]],["i32"]]],[5,"set_active_producers","","@brief Set new active producers Set new active producers. Producers will only be activated once the block which starts the next round is irrreversible @param producer_data - pointer to producer schedule packed as bytes @param producer_data_size - size of the packed producer schedule @pre `producer_data` is a valid pointer to a range of memory at least `producer_data_size` bytes long that contains serialized produced schedule data",N,N],[5,"db_idx_long_double_end","","Get an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table",N,[[["u64"],["u64"],["u64"]],["i32"]]],[5,"db_idx256_update","","Update an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table",N,N],[5,"sha1","","Hashes `data` using `sha1` and stores result in memory pointed to by hash. @brief Hashes `data` using `sha1` and stores result in memory pointed to by hash.",N,N],[5,"db_get_i64","","Get a record in a primary 64-bit integer index table",N,N],[5,"db_idx_long_double_find_primary","","Find a table row in a secondary quadruple-precision floating-point index table by primary key",N,N],[5,"db_idx128_end","","Get an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table",N,[[["u64"],["u64"],["u64"]],["i32"]]],[5,"current_time","","Returns the time in microseconds from 1970 of the current block @brief Get time of the current block (i.e. the block including this action) @return time in microseconds from 1970 of the current block",N,[[],["u64"]]],[5,"send_deferred","","Sends a deferred transaction.",N,N],[5,"db_update_i64","","Update a record in a primary 64-bit integer index table",N,N],[5,"get_blockchain_parameters_packed","","@brief Retrieve the blolckchain parameters Retrieve the blolckchain parameters @param data - output buffer of the blockchain parameters, only retrieved if sufficent size to hold packed data. @param datalen - size of the data buffer, 0 to report required size. @return size of the blockchain parameters @pre `data` is a valid pointer to a range of memory at least `datalen` bytes long @post `data` is filled with packed blockchain parameters",N,N],[5,"is_privileged","","@brief Check if an account is privileged Check if an account is privileged @param account - name of the account to be checked @return true if the account is privileged @return false if the account is not privileged",N,[[["u64"]],["bool"]]],[5,"set_resource_limits","","@brief Set the resource limits of an account Set the resource limits of an account @param account - name of the account whose resource limit to be set @param ram_bytes - ram limit in absolute bytes @param net_weight - fractionally proportionate net limit of available resources based on (weight / total_weight_of_all_accounts) @param cpu_weight - fractionally proportionate cpu limit of available resources based on (weight / total_weight_of_all_accounts)",N,N],[5,"db_idx128_find_secondary","","Find a table row in a secondary 128-bit integer index table by secondary key",N,N],[5,"printdf","","Prints value as double-precision floating point number @brief Prints value as double-precision floating point number (i.e. double) @param value of double to be printed",N,N],[5,"db_idx128_store","","Store an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table",N,N],[5,"db_idx64_end","","Get an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table",N,[[["u64"],["u64"],["u64"]],["i32"]]],[5,"assert_sha512","","Tests if the sha512 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. @brief Tests if the sha512 hash generated from data matches the provided checksum.",N,N],[8,"ActionFn","eosio","",N,N],[18,"NAME","","",19,N],[10,"execute","","",19,[[["self"]]]],[11,"read_data","","",19,[[],["result",["readerror"]]]],[11,"to_action","","",19,[[["self"],["vec",["permission"]]],["action"]]],[11,"send_inline","","",19,[[["self"],["vec",["permission"]]],["result",["writeerror"]]]],[8,"Assert","","",N,N],[10,"assert","","",20,[[["self"],["str"]],["t"]]],[8,"Read","","",N,N],[10,"read","","",21,N],[8,"Write","","",N,N],[10,"write","","",22,N],[8,"Hasher","","",N,N],[10,"new","","",23,[[["str"]],["self"]]],[8,"Print","","",N,N],[10,"print","","",24,[[["self"]]]],[8,"TableRow","","",N,N],[18,"NAME","","",25,N],[10,"primary_key","","",25,[[["self"]],["u64"]]],[11,"secondary_keys","","",25,N],[11,"table","","",25,[[["c"],["s"]],["primarytableindex"]]],[8,"TableCursor","","Table Cursor",N,N],[10,"get","","",26,[[["self"]],["result",["readerror"]]]],[10,"remove","","",26,[[["self"]],["result",["readerror"]]]],[10,"update","","",26,[[["self"],["option",["accountname"]],["t"]],["result",["usize","writeerror"]]]],[8,"TableIndex","","Table index",N,N],[16,"Cursor","","",27,N],[10,"lower_bound","","",27,[[["self"],["n"]],["option"]]],[10,"upper_bound","","",27,[[["self"],["n"]],["option"]]],[10,"insert","","",27,[[["self"],["accountname"],["t"]],["result",["writeerror"]]]],[8,"TableIterator","","Table iterator",N,N],[8,"SecondaryTableKey","","",N,N],[10,"end","","",28,[[["self"],["accountname"],["tablescope"],["secondarytablename"]],["i32"]]],[10,"next","","",28,N],[10,"remove","","",28,[[["self"],["i32"]]]],[10,"previous","","",28,N],[10,"store","","",28,[[["self"],["tablescope"],["secondarytablename"],["accountname"],["u64"]],["i32"]]],[10,"update","","",28,[[["self"],["i32"],["accountname"]]]],[10,"lower_bound","","",28,N],[10,"upper_bound","","",28,N],[10,"find_primary","","",28,[[["self"],["accountname"],["tablescope"],["secondarytablename"],["u64"]],["i32"]]],[10,"find_secondary","","",28,N],[11,"upsert","","",28,[[["self"],["accountname"],["tablescope"],["secondarytablename"],["accountname"],["u64"]]]],[11,"into","eosio::sys","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","eosio","",9,[[["self"]],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"into_iter","","",41,[[["self"]],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"into_iter","","",42,[[["self"]],["i"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"into_iter","","",43,[[["self"]],["i"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"into_iter","","",44,[[["self"]],["i"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","eosio::sys::ctypes","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","eosio::sys","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"index","eosio::sys::ctypes","",49,[[["self"],["rangefull"]],["cstr"]]],[11,"index","","",48,[[["self"],["rangefull"]],["osstr"]]],[11,"default","","Creates an empty `CString`.",49,[[],["cstring"]]],[11,"default","","Constructs an empty `OsString`.",48,[[],["osstring"]]],[11,"eq","","",46,[[["self"],["path"]],["bool"]]],[11,"eq","","",48,[[["self"],["str"]],["bool"]]],[11,"eq","","",46,[[["self"],["pathbuf"]],["bool"]]],[11,"eq","","",48,[[["self"],["str"]],["bool"]]],[11,"eq","","",48,[[["self"],["path"]],["bool"]]],[11,"eq","","",46,[[["self"],["cow"]],["bool"]]],[11,"eq","","",47,[[["self"],["nulerror"]],["bool"]]],[11,"ne","","",47,[[["self"],["nulerror"]],["bool"]]],[11,"eq","","",51,[[["self"],["frombyteswithnulerror"]],["bool"]]],[11,"ne","","",51,[[["self"],["frombyteswithnulerror"]],["bool"]]],[11,"eq","","",48,[[["self"],["path"]],["bool"]]],[11,"eq","","",49,[[["self"],["cstring"]],["bool"]]],[11,"ne","","",49,[[["self"],["cstring"]],["bool"]]],[11,"eq","","",48,[[["self"],["cow"]],["bool"]]],[11,"eq","","",48,[[["self"],["osstr"]],["bool"]]],[11,"eq","","",46,[[["self"],["osstring"]],["bool"]]],[11,"eq","","",52,[[["self"],["cstr"]],["bool"]]],[11,"eq","","",48,[[["self"],["cow"]],["bool"]]],[11,"eq","","",50,[[["self"],["intostringerror"]],["bool"]]],[11,"ne","","",50,[[["self"],["intostringerror"]],["bool"]]],[11,"eq","","",48,[[["self"],["pathbuf"]],["bool"]]],[11,"eq","","",46,[[["self"],["cow"]],["bool"]]],[11,"eq","","",46,[[["self"],["str"]],["bool"]]],[11,"eq","","",46,[[["self"],["path"]],["bool"]]],[11,"eq","","",48,[[["self"],["osstring"]],["bool"]]],[11,"eq","","",46,[[["self"],["osstr"]],["bool"]]],[11,"eq","","",48,[[["self"],["osstr"]],["bool"]]],[11,"hash","","",49,N],[11,"hash","","",48,N],[11,"hash","","",46,N],[11,"hash","","",52,N],[11,"from","","",48,[[["pathbuf"]],["osstring"]]],[11,"from","","",49,[[["cstr"]],["cstring"]]],[11,"from","","",49,[[["cow",["cstr"]]],["cstring"]]],[11,"from","","Converts a `Box<OsStr>` into a `OsString` without copying or allocating.",48,[[["box",["osstr"]]],["osstring"]]],[11,"from","","Converts a [`String`] into a [`OsString`].",48,[[["string"]],["osstring"]]],[11,"from","","",48,[[["t"]],["osstring"]]],[11,"from","","Converts a [`Box`]`<CStr>` into a [`CString`] without copying or allocating.",49,[[["box",["cstr"]]],["cstring"]]],[11,"from","","",48,[[["cow",["osstr"]]],["osstring"]]],[11,"from","","",48,[[["defaultenvkey"]],["osstring"]]],[11,"partial_cmp","","",46,[[["self"],["osstr"]],["option",["ordering"]]]],[11,"lt","","",46,[[["self"],["osstr"]],["bool"]]],[11,"le","","",46,[[["self"],["osstr"]],["bool"]]],[11,"gt","","",46,[[["self"],["osstr"]],["bool"]]],[11,"ge","","",46,[[["self"],["osstr"]],["bool"]]],[11,"partial_cmp","","",48,[[["self"],["path"]],["option",["ordering"]]]],[11,"partial_cmp","","",48,[[["self"],["osstr"]],["option",["ordering"]]]],[11,"partial_cmp","","",48,[[["self"],["cow"]],["option",["ordering"]]]],[11,"partial_cmp","","",46,[[["self"],["path"]],["option",["ordering"]]]],[11,"partial_cmp","","",46,[[["self"],["osstring"]],["option",["ordering"]]]],[11,"partial_cmp","","",46,[[["self"],["cow"]],["option",["ordering"]]]],[11,"partial_cmp","","",48,[[["self"],["cow"]],["option",["ordering"]]]],[11,"partial_cmp","","",52,[[["self"],["cstr"]],["option",["ordering"]]]],[11,"partial_cmp","","",48,[[["self"],["pathbuf"]],["option",["ordering"]]]],[11,"partial_cmp","","",46,[[["self"],["cow"]],["option",["ordering"]]]],[11,"partial_cmp","","",46,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",46,[[["self"],["pathbuf"]],["option",["ordering"]]]],[11,"partial_cmp","","",49,[[["self"],["cstring"]],["option",["ordering"]]]],[11,"lt","","",49,[[["self"],["cstring"]],["bool"]]],[11,"le","","",49,[[["self"],["cstring"]],["bool"]]],[11,"gt","","",49,[[["self"],["cstring"]],["bool"]]],[11,"ge","","",49,[[["self"],["cstring"]],["bool"]]],[11,"partial_cmp","","",46,[[["self"],["path"]],["option",["ordering"]]]],[11,"partial_cmp","","",48,[[["self"],["osstr"]],["option",["ordering"]]]],[11,"partial_cmp","","",48,[[["self"],["osstring"]],["option",["ordering"]]]],[11,"lt","","",48,[[["self"],["osstring"]],["bool"]]],[11,"le","","",48,[[["self"],["osstring"]],["bool"]]],[11,"gt","","",48,[[["self"],["osstring"]],["bool"]]],[11,"ge","","",48,[[["self"],["osstring"]],["bool"]]],[11,"partial_cmp","","",48,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",48,[[["self"],["path"]],["option",["ordering"]]]],[11,"deref","","",48,[[["self"]],["osstr"]]],[11,"deref","","",49,[[["self"]],["cstr"]]],[11,"drop","","",49,N],[11,"description","","",51,[[["self"]],["str"]]],[11,"description","","",50,[[["self"]],["str"]]],[11,"cause","","",50,[[["self"]],["option",["error"]]]],[11,"description","","",47,[[["self"]],["str"]]],[11,"cmp","","",52,[[["self"],["cstr"]],["ordering"]]],[11,"cmp","","",49,[[["self"],["cstring"]],["ordering"]]],[11,"cmp","","",48,[[["self"],["osstring"]],["ordering"]]],[11,"cmp","","",46,[[["self"],["osstr"]],["ordering"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",49,[[["self"]],["cstring"]]],[11,"clone","","",50,[[["self"]],["intostringerror"]]],[11,"clone","","",51,[[["self"]],["frombyteswithnulerror"]]],[11,"clone","","",48,[[["self"]],["osstring"]]],[11,"clone","","",47,[[["self"]],["nulerror"]]],[11,"from_bytes","","",46,N],[11,"as_bytes","","",46,N],[11,"from_vec","","",48,[[["vec",["u8"]]],["osstring"]]],[11,"into_vec","","",48,[[["self"]],["vec",["u8"]]]],[11,"borrow","","",48,[[["self"]],["osstr"]]],[11,"borrow","","",49,[[["self"]],["cstr"]]],[11,"to_owned","","",46,[[["self"]],["osstring"]]],[11,"clone_into","","",46,N],[11,"to_owned","","",52,[[["self"]],["cstring"]]],[11,"as_ref","","",48,[[["self"]],["path"]]],[11,"as_ref","","",46,[[["self"]],["osstr"]]],[11,"as_ref","","",48,[[["self"]],["osstr"]]],[11,"as_ref","","",49,[[["self"]],["cstr"]]],[11,"as_ref","","",52,[[["self"]],["cstr"]]],[11,"as_ref","","",46,[[["self"]],["path"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","eosio::sys","",18,[[["self"]],["capi_checksum512"]]],[11,"clone","","",16,[[["self"]],["capi_checksum256"]]],[11,"clone","","",17,[[["self"]],["capi_checksum160"]]],[11,"partial_cmp","","",17,[[["self"],["capi_checksum160"]],["option",["ordering"]]]],[11,"lt","","",17,[[["self"],["capi_checksum160"]],["bool"]]],[11,"le","","",17,[[["self"],["capi_checksum160"]],["bool"]]],[11,"gt","","",17,[[["self"],["capi_checksum160"]],["bool"]]],[11,"ge","","",17,[[["self"],["capi_checksum160"]],["bool"]]],[11,"partial_cmp","","",16,[[["self"],["capi_checksum256"]],["option",["ordering"]]]],[11,"lt","","",16,[[["self"],["capi_checksum256"]],["bool"]]],[11,"le","","",16,[[["self"],["capi_checksum256"]],["bool"]]],[11,"gt","","",16,[[["self"],["capi_checksum256"]],["bool"]]],[11,"ge","","",16,[[["self"],["capi_checksum256"]],["bool"]]],[11,"cmp","","",17,[[["self"],["capi_checksum160"]],["ordering"]]],[11,"cmp","","",16,[[["self"],["capi_checksum256"]],["ordering"]]],[11,"default","","",17,[[],["capi_checksum160"]]],[11,"default","","",16,[[],["capi_checksum256"]]],[11,"default","","",18,[[],["capi_checksum512"]]],[11,"hash","","",16,N],[11,"hash","","",17,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",0,[[["self"],["parsenameerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["parsenameerror"]],["bool"]]],[11,"eq","","",16,[[["self"],["capi_checksum256"]],["bool"]]],[11,"ne","","",16,[[["self"],["capi_checksum256"]],["bool"]]],[11,"eq","","",17,[[["self"],["capi_checksum160"]],["bool"]]],[11,"ne","","",17,[[["self"],["capi_checksum160"]],["bool"]]],[11,"eq","","",1,[[["self"],["parsesymbolerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["parsesymbolerror"]],["bool"]]],[11,"assert","eosio","",35,N],[11,"assert","","",36,N],[11,"assert","","",37,N],[11,"assert","","",38,N],[11,"read","","",9,N],[11,"read","","",29,N],[11,"read","","",2,N],[11,"read","","",33,N],[11,"read","","",4,N],[11,"read","","",5,N],[11,"read","","",35,N],[11,"read","","",36,N],[11,"read","","",37,N],[11,"read","","",38,N],[11,"read","","",10,N],[11,"read","","",11,N],[11,"read","","",6,N],[11,"read","","",39,N],[11,"read","","",40,N],[11,"read","","",15,N],[11,"read","","",45,N],[11,"write","","",9,N],[11,"write","","",29,N],[11,"write","","",2,N],[11,"write","","",33,N],[11,"write","","",3,N],[11,"write","","",4,N],[11,"write","","",5,N],[11,"write","","",35,N],[11,"write","","",36,N],[11,"write","","",37,N],[11,"write","","",38,N],[11,"write","","",10,N],[11,"write","","",11,N],[11,"write","","",6,N],[11,"write","","",39,N],[11,"write","","",40,N],[11,"write","","",15,N],[11,"write","","",45,N],[11,"new","","",35,[[["str"]],["self"]]],[11,"new","","",36,[[["str"]],["self"]]],[11,"new","","",37,[[["str"]],["self"]]],[11,"new","","",38,[[["str"]],["self"]]],[11,"print","","",9,[[["self"]]]],[11,"print","","",29,[[["self"]]]],[11,"print","","",33,[[["self"]]]],[11,"print","","",10,[[["self"]]]],[11,"print","","",11,[[["self"]]]],[11,"print","","",6,[[["self"]]]],[11,"print","","",39,[[["self"]]]],[11,"print","","",40,[[["self"]]]],[11,"print","","",41,[[["self"]]]],[11,"print","","",15,[[["self"]]]],[11,"get","","",41,[[["self"]],["result",["readerror"]]]],[11,"remove","","",41,[[["self"]],["result",["readerror"]]]],[11,"update","","",41,[[["self"],["option",["accountname"]],["t"]],["result",["usize","writeerror"]]]],[11,"get","","",43,[[["self"]],["result",["readerror"]]]],[11,"remove","","",43,[[["self"]],["result",["readerror"]]]],[11,"update","","",43,[[["self"],["option",["accountname"]],["t"]],["result",["usize","writeerror"]]]],[11,"lower_bound","","",12,[[["self"],["n"]],["option"]]],[11,"upper_bound","","",12,[[["self"],["n"]],["option"]]],[11,"insert","","",12,[[["self"],["accountname"],["t"]],["result",["writeerror"]]]],[11,"lower_bound","","",14,[[["self"],["n"]],["option"]]],[11,"upper_bound","","",14,[[["self"],["n"]],["option"]]],[11,"insert","","",14,[[["self"],["accountname"],["t"]],["result",["writeerror"]]]],[11,"end","","",9,[[["self"],["accountname"],["tablescope"],["secondarytablename"]],["i32"]]],[11,"next","","",9,N],[11,"previous","","",9,N],[11,"remove","","",9,[[["self"],["i32"]]]],[11,"store","","",9,[[["self"],["tablescope"],["secondarytablename"],["accountname"],["u64"]],["i32"]]],[11,"update","","",9,[[["self"],["i32"],["accountname"]]]],[11,"lower_bound","","",9,N],[11,"upper_bound","","",9,N],[11,"find_primary","","",9,[[["self"],["accountname"],["tablescope"],["secondarytablename"],["u64"]],["i32"]]],[11,"find_secondary","","",9,N],[11,"end","","",29,[[["self"],["accountname"],["tablescope"],["secondarytablename"]],["i32"]]],[11,"next","","",29,N],[11,"previous","","",29,N],[11,"remove","","",29,[[["self"],["i32"]]]],[11,"store","","",29,[[["self"],["tablescope"],["secondarytablename"],["accountname"],["u64"]],["i32"]]],[11,"update","","",29,[[["self"],["i32"],["accountname"]]]],[11,"lower_bound","","",29,N],[11,"upper_bound","","",29,N],[11,"find_primary","","",29,[[["self"],["accountname"],["tablescope"],["secondarytablename"],["u64"]],["i32"]]],[11,"find_secondary","","",29,N],[11,"end","","",33,[[["self"],["accountname"],["tablescope"],["secondarytablename"]],["i32"]]],[11,"next","","",33,N],[11,"previous","","",33,N],[11,"remove","","",33,[[["self"],["i32"]]]],[11,"store","","",33,[[["self"],["tablescope"],["secondarytablename"],["accountname"],["u64"]],["i32"]]],[11,"update","","",33,[[["self"],["i32"],["accountname"]]]],[11,"lower_bound","","",33,N],[11,"upper_bound","","",33,N],[11,"find_primary","","",33,[[["self"],["accountname"],["tablescope"],["secondarytablename"],["u64"]],["i32"]]],[11,"find_secondary","","",33,N],[11,"end","","",39,[[["self"],["accountname"],["tablescope"],["secondarytablename"]],["i32"]]],[11,"next","","",39,N],[11,"previous","","",39,N],[11,"remove","","",39,[[["self"],["i32"]]]],[11,"store","","",39,[[["self"],["tablescope"],["secondarytablename"],["accountname"],["u64"]],["i32"]]],[11,"update","","",39,[[["self"],["i32"],["accountname"]]]],[11,"lower_bound","","",39,N],[11,"upper_bound","","",39,N],[11,"find_primary","","",39,[[["self"],["accountname"],["tablescope"],["secondarytablename"],["u64"]],["i32"]]],[11,"find_secondary","","",39,N],[11,"end","","",40,[[["self"],["accountname"],["tablescope"],["secondarytablename"]],["i32"]]],[11,"next","","",40,N],[11,"previous","","",40,N],[11,"remove","","",40,[[["self"],["i32"]]]],[11,"store","","",40,[[["self"],["tablescope"],["secondarytablename"],["accountname"],["u64"]],["i32"]]],[11,"update","","",40,[[["self"],["i32"],["accountname"]]]],[11,"lower_bound","","",40,N],[11,"upper_bound","","",40,N],[11,"find_primary","","",40,[[["self"],["accountname"],["tablescope"],["secondarytablename"],["u64"]],["i32"]]],[11,"find_secondary","","",40,N],[11,"next","","",42,[[["self"]],["option"]]],[11,"next","","",44,[[["self"]],["option"]]],[11,"partial_cmp","","",9,[[["self"],["accountname"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["accountname"]],["bool"]]],[11,"le","","",9,[[["self"],["accountname"]],["bool"]]],[11,"gt","","",9,[[["self"],["accountname"]],["bool"]]],[11,"ge","","",9,[[["self"],["accountname"]],["bool"]]],[11,"partial_cmp","","",29,[[["self"],["permissionname"]],["option",["ordering"]]]],[11,"lt","","",29,[[["self"],["permissionname"]],["bool"]]],[11,"le","","",29,[[["self"],["permissionname"]],["bool"]]],[11,"gt","","",29,[[["self"],["permissionname"]],["bool"]]],[11,"ge","","",29,[[["self"],["permissionname"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["permission"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["permission"]],["bool"]]],[11,"le","","",2,[[["self"],["permission"]],["bool"]]],[11,"gt","","",2,[[["self"],["permission"]],["bool"]]],[11,"ge","","",2,[[["self"],["permission"]],["bool"]]],[11,"partial_cmp","","",33,[[["self"],["actionname"]],["option",["ordering"]]]],[11,"lt","","",33,[[["self"],["actionname"]],["bool"]]],[11,"le","","",33,[[["self"],["actionname"]],["bool"]]],[11,"gt","","",33,[[["self"],["actionname"]],["bool"]]],[11,"ge","","",33,[[["self"],["actionname"]],["bool"]]],[11,"partial_cmp","","",35,[[["self"],["ripemd160"]],["option",["ordering"]]]],[11,"lt","","",35,[[["self"],["ripemd160"]],["bool"]]],[11,"le","","",35,[[["self"],["ripemd160"]],["bool"]]],[11,"gt","","",35,[[["self"],["ripemd160"]],["bool"]]],[11,"ge","","",35,[[["self"],["ripemd160"]],["bool"]]],[11,"partial_cmp","","",36,[[["self"],["sha1"]],["option",["ordering"]]]],[11,"lt","","",36,[[["self"],["sha1"]],["bool"]]],[11,"le","","",36,[[["self"],["sha1"]],["bool"]]],[11,"gt","","",36,[[["self"],["sha1"]],["bool"]]],[11,"ge","","",36,[[["self"],["sha1"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["symbolname"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["symbolname"]],["bool"]]],[11,"le","","",10,[[["self"],["symbolname"]],["bool"]]],[11,"gt","","",10,[[["self"],["symbolname"]],["bool"]]],[11,"ge","","",10,[[["self"],["symbolname"]],["bool"]]],[11,"partial_cmp","","",11,[[["self"],["symbol"]],["option",["ordering"]]]],[11,"lt","","",11,[[["self"],["symbol"]],["bool"]]],[11,"le","","",11,[[["self"],["symbol"]],["bool"]]],[11,"gt","","",11,[[["self"],["symbol"]],["bool"]]],[11,"ge","","",11,[[["self"],["symbol"]],["bool"]]],[11,"partial_cmp","","",39,[[["self"],["tablescope"]],["option",["ordering"]]]],[11,"lt","","",39,[[["self"],["tablescope"]],["bool"]]],[11,"le","","",39,[[["self"],["tablescope"]],["bool"]]],[11,"gt","","",39,[[["self"],["tablescope"]],["bool"]]],[11,"ge","","",39,[[["self"],["tablescope"]],["bool"]]],[11,"partial_cmp","","",40,[[["self"],["primarytablename"]],["option",["ordering"]]]],[11,"lt","","",40,[[["self"],["primarytablename"]],["bool"]]],[11,"le","","",40,[[["self"],["primarytablename"]],["bool"]]],[11,"gt","","",40,[[["self"],["primarytablename"]],["bool"]]],[11,"ge","","",40,[[["self"],["primarytablename"]],["bool"]]],[11,"partial_cmp","","",13,[[["self"],["secondarytablename"]],["option",["ordering"]]]],[11,"lt","","",13,[[["self"],["secondarytablename"]],["bool"]]],[11,"le","","",13,[[["self"],["secondarytablename"]],["bool"]]],[11,"gt","","",13,[[["self"],["secondarytablename"]],["bool"]]],[11,"ge","","",13,[[["self"],["secondarytablename"]],["bool"]]],[11,"partial_cmp","","",15,[[["self"],["time"]],["option",["ordering"]]]],[11,"lt","","",15,[[["self"],["time"]],["bool"]]],[11,"le","","",15,[[["self"],["time"]],["bool"]]],[11,"gt","","",15,[[["self"],["time"]],["bool"]]],[11,"ge","","",15,[[["self"],["time"]],["bool"]]],[11,"partial_cmp","","",45,[[["self"],["timespan"]],["option",["ordering"]]]],[11,"lt","","",45,[[["self"],["timespan"]],["bool"]]],[11,"le","","",45,[[["self"],["timespan"]],["bool"]]],[11,"gt","","",45,[[["self"],["timespan"]],["bool"]]],[11,"ge","","",45,[[["self"],["timespan"]],["bool"]]],[11,"default","","",9,[[],["accountname"]]],[11,"default","","",29,[[],["permissionname"]]],[11,"default","","",2,[[],["permission"]]],[11,"default","","",33,[[],["actionname"]]],[11,"default","","",4,[[],["asset"]]],[11,"default","","",5,[[],["extendedasset"]]],[11,"default","","",35,[[],["ripemd160"]]],[11,"default","","",36,[[],["sha1"]]],[11,"default","","",37,[[],["sha256"]]],[11,"default","","",10,[[],["symbolname"]]],[11,"default","","",11,[[],["symbol"]]],[11,"default","","",6,[[],["extendedsymbol"]]],[11,"default","","",39,[[],["tablescope"]]],[11,"default","","",40,[[],["primarytablename"]]],[11,"default","","",13,[[],["secondarytablename"]]],[11,"next_back","","",42,[[["self"]],["option"]]],[11,"next_back","","",44,[[["self"]],["option"]]],[11,"cmp","","",9,[[["self"],["accountname"]],["ordering"]]],[11,"cmp","","",29,[[["self"],["permissionname"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["permission"]],["ordering"]]],[11,"cmp","","",33,[[["self"],["actionname"]],["ordering"]]],[11,"cmp","","",35,[[["self"],["ripemd160"]],["ordering"]]],[11,"cmp","","",36,[[["self"],["sha1"]],["ordering"]]],[11,"cmp","","",10,[[["self"],["symbolname"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["symbol"]],["ordering"]]],[11,"cmp","","",39,[[["self"],["tablescope"]],["ordering"]]],[11,"cmp","","",40,[[["self"],["primarytablename"]],["ordering"]]],[11,"cmp","","",13,[[["self"],["secondarytablename"]],["ordering"]]],[11,"cmp","","",15,[[["self"],["time"]],["ordering"]]],[11,"cmp","","",45,[[["self"],["timespan"]],["ordering"]]],[11,"eq","","",9,[[["self"],["accountname"]],["bool"]]],[11,"ne","","",9,[[["self"],["accountname"]],["bool"]]],[11,"eq","","",29,[[["self"],["permissionname"]],["bool"]]],[11,"ne","","",29,[[["self"],["permissionname"]],["bool"]]],[11,"eq","","",2,[[["self"],["permission"]],["bool"]]],[11,"ne","","",2,[[["self"],["permission"]],["bool"]]],[11,"eq","","",33,[[["self"],["actionname"]],["bool"]]],[11,"ne","","",33,[[["self"],["actionname"]],["bool"]]],[11,"eq","","",4,[[["self"],["asset"]],["bool"]]],[11,"ne","","",4,[[["self"],["asset"]],["bool"]]],[11,"eq","","",5,[[["self"],["extendedasset"]],["bool"]]],[11,"ne","","",5,[[["self"],["extendedasset"]],["bool"]]],[11,"eq","","",35,[[["self"],["ripemd160"]],["bool"]]],[11,"ne","","",35,[[["self"],["ripemd160"]],["bool"]]],[11,"eq","","",36,[[["self"],["sha1"]],["bool"]]],[11,"ne","","",36,[[["self"],["sha1"]],["bool"]]],[11,"eq","","",10,[[["self"],["symbolname"]],["bool"]]],[11,"ne","","",10,[[["self"],["symbolname"]],["bool"]]],[11,"eq","","",11,[[["self"],["symbol"]],["bool"]]],[11,"ne","","",11,[[["self"],["symbol"]],["bool"]]],[11,"eq","","",6,[[["self"],["extendedsymbol"]],["bool"]]],[11,"ne","","",6,[[["self"],["extendedsymbol"]],["bool"]]],[11,"eq","","",39,[[["self"],["tablescope"]],["bool"]]],[11,"ne","","",39,[[["self"],["tablescope"]],["bool"]]],[11,"eq","","",40,[[["self"],["primarytablename"]],["bool"]]],[11,"ne","","",40,[[["self"],["primarytablename"]],["bool"]]],[11,"eq","","",41,[[["self"],["primarytablecursor"]],["bool"]]],[11,"eq","","",13,[[["self"],["secondarytablename"]],["bool"]]],[11,"ne","","",13,[[["self"],["secondarytablename"]],["bool"]]],[11,"eq","","",15,[[["self"],["time"]],["bool"]]],[11,"ne","","",15,[[["self"],["time"]],["bool"]]],[11,"eq","","",45,[[["self"],["timespan"]],["bool"]]],[11,"ne","","",45,[[["self"],["timespan"]],["bool"]]],[11,"from","","",9,[[["u64"]],["self"]]],[11,"from","","",29,[[["u64"]],["self"]]],[11,"from","","",33,[[["u64"]],["self"]]],[11,"from","","",10,[[["u64"]],["self"]]],[11,"from","","",11,[[["u64"]],["self"]]],[11,"from","","",39,[[["u64"]],["self"]]],[11,"from","","",39,[[["accountname"]],["self"]]],[11,"from","","",9,[[["tablescope"]],["self"]]],[11,"from","","",39,[[["symbolname"]],["self"]]],[11,"from","","",10,[[["tablescope"]],["self"]]],[11,"from","","",40,[[["u64"]],["self"]]],[11,"from","","",15,[[["u64"]],["self"]]],[11,"from","","",15,[[["i64"]],["self"]]],[11,"clone","","",9,[[["self"]],["accountname"]]],[11,"clone","","",29,[[["self"]],["permissionname"]]],[11,"clone","","",2,[[["self"]],["permission"]]],[11,"clone","","",33,[[["self"]],["actionname"]]],[11,"clone","","",3,[[["self"]],["action"]]],[11,"clone","","",34,[[["self"]],["actionid"]]],[11,"clone","","",4,[[["self"]],["asset"]]],[11,"clone","","",5,[[["self"]],["extendedasset"]]],[11,"clone","","",7,[[["self"]],["readerror"]]],[11,"clone","","",8,[[["self"]],["writeerror"]]],[11,"clone","","",35,[[["self"]],["ripemd160"]]],[11,"clone","","",36,[[["self"]],["sha1"]]],[11,"clone","","",37,[[["self"]],["sha256"]]],[11,"clone","","",38,[[["self"]],["sha512"]]],[11,"clone","","",10,[[["self"]],["symbolname"]]],[11,"clone","","",11,[[["self"]],["symbol"]]],[11,"clone","","",6,[[["self"]],["extendedsymbol"]]],[11,"clone","","",39,[[["self"]],["tablescope"]]],[11,"clone","","",40,[[["self"]],["primarytablename"]]],[11,"clone","","",41,[[["self"]],["primarytablecursor"]]],[11,"clone","","",42,[[["self"]],["primarytableiterator"]]],[11,"clone","","",12,[[["self"]],["primarytableindex"]]],[11,"clone","","",13,[[["self"]],["secondarytablename"]]],[11,"clone","","",43,[[["self"]],["secondarytablecursor"]]],[11,"clone","","",44,[[["self"]],["secondarytableiterator"]]],[11,"clone","","",14,[[["self"]],["secondarytableindex"]]],[11,"clone","","",15,[[["self"]],["time"]]],[11,"clone","","",45,[[["self"]],["timespan"]]],[11,"into_iter","","",41,N],[11,"into_iter","","",43,N],[11,"hash","","",9,N],[11,"hash","","",29,N],[11,"hash","","",2,N],[11,"hash","","",33,N],[11,"hash","","",35,N],[11,"hash","","",36,N],[11,"hash","","",10,N],[11,"hash","","",11,N],[11,"hash","","",39,N],[11,"hash","","",40,N],[11,"hash","","",13,N],[11,"hash","","",15,N],[11,"hash","","",45,N],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",9,[[["str"]],["result"]]],[11,"from_str","","",29,[[["str"]],["result"]]],[11,"from_str","","",33,[[["str"]],["result"]]],[11,"from_str","","",39,[[["str"]],["result"]]],[11,"from_str","","",40,[[["str"]],["result"]]],[11,"add","","",4,[[["self"],["self"]],["self"]]],[11,"add","","",5,[[["self"],["self"]],["self"]]],[11,"add","","",15,[[["self"],["self"]],["self"]]],[11,"sub","","",4,[[["self"],["self"]],["self"]]],[11,"sub","","",5,[[["self"],["self"]],["self"]]],[11,"sub","","",15,[[["self"],["self"]],["self"]]],[11,"mul","","",4,[[["self"],["self"]],["self"]]],[11,"mul","","",5,[[["self"],["self"]],["self"]]],[11,"mul","","",15,[[["self"],["self"]],["self"]]],[11,"div","","",4,[[["self"],["self"]],["self"]]],[11,"div","","",5,[[["self"],["self"]],["self"]]],[11,"div","","",15,[[["self"],["self"]],["self"]]],[11,"rem","","",4,[[["self"],["self"]],["self"]]],[11,"rem","","",5,[[["self"],["self"]],["self"]]],[11,"add_assign","","",4,[[["self"],["self"]]]],[11,"add_assign","","",5,[[["self"],["self"]]]],[11,"add_assign","","",15,[[["self"],["self"]]]],[11,"sub_assign","","",4,[[["self"],["self"]]]],[11,"sub_assign","","",5,[[["self"],["self"]]]],[11,"sub_assign","","",15,[[["self"],["self"]]]],[11,"mul_assign","","",4,[[["self"],["self"]]]],[11,"mul_assign","","",5,[[["self"],["self"]]]],[11,"mul_assign","","",15,[[["self"],["self"]]]],[11,"div_assign","","",4,[[["self"],["self"]]]],[11,"div_assign","","",5,[[["self"],["self"]]]],[11,"div_assign","","",15,[[["self"],["self"]]]],[11,"rem_assign","","",4,[[["self"],["self"]]]],[11,"rem_assign","","",5,[[["self"],["self"]]]],[11,"new","eosio::sys::ctypes","Coerces into an `OsStr` slice.",46,[[["s"]],["osstr"]]],[11,"to_str","","Yields a [`&str`] slice if the `OsStr` is valid Unicode.",46,[[["self"]],["option",["str"]]]],[11,"to_string_lossy","","Converts an `OsStr` to a [`Cow`]`<`[`str`]`>`.",46,[[["self"]],["cow",["str"]]]],[11,"to_os_string","","Copies the slice into an owned [`OsString`].",46,[[["self"]],["osstring"]]],[11,"is_empty","","Checks whether the `OsStr` is empty.",46,[[["self"]],["bool"]]],[11,"len","","Returns the length of this `OsStr`.",46,[[["self"]],["usize"]]],[11,"into_os_string","","Converts a [`Box`]`<OsStr>` into an [`OsString`] without copying or allocating.",46,[[["box",["osstr"]]],["osstring"]]],[11,"nul_position","","Returns the position of the nul byte in the slice that caused [`CString::new`] to fail.",47,[[["self"]],["usize"]]],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which generated the error in the first place.",47,[[["self"]],["vec",["u8"]]]],[11,"new","","Constructs a new empty `OsString`.",48,[[],["osstring"]]],[11,"as_os_str","","Converts to an [`OsStr`] slice.",48,[[["self"]],["osstr"]]],[11,"into_string","","Converts the `OsString` into a [`String`] if it contains valid Unicode data.",48,[[["self"]],["result",["string","osstring"]]]],[11,"push","","Extends the string with the given [`&OsStr`] slice.",48,N],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",48,[[["usize"]],["osstring"]]],[11,"clear","","Truncates the `OsString` to zero length.",48,N],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",48,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted in the given `OsString`.",48,N],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to be inserted in the given `OsString`. Does nothing if the capacity is already sufficient.",48,N],[11,"shrink_to_fit","","Shrinks the capacity of the `OsString` to match its length.",48,N],[11,"shrink_to","","Shrinks the capacity of the `OsString` with a lower bound.",48,N],[11,"into_boxed_os_str","","Converts this `OsString` into a boxed [`OsStr`].",48,[[["self"]],["box",["osstr"]]]],[11,"new","","Creates a new C-compatible string from a container of bytes.",49,[[["t"]],["result",["cstring","nulerror"]]]],[11,"from_vec_unchecked","","Creates a C-compatible string by consuming a byte vector, without checking for interior 0 bytes.",49,[[["vec",["u8"]]],["cstring"]]],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C via [`into_raw`].",49,N],[11,"into_raw","","Consumes the `CString` and transfers ownership of the string to a C caller.",49,N],[11,"into_string","","Converts the `CString` into a [`String`] if it contains valid UTF-8 data.",49,[[["self"]],["result",["string","intostringerror"]]]],[11,"into_bytes","","Consumes the `CString` and returns the underlying byte buffer.",49,[[["self"]],["vec",["u8"]]]],[11,"into_bytes_with_nul","","Equivalent to the [`into_bytes`] function except that the returned vector includes the trailing nul terminator.",49,[[["self"]],["vec",["u8"]]]],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",49,N],[11,"as_bytes_with_nul","","Equivalent to the [`as_bytes`] function except that the returned slice includes the trailing nul terminator.",49,N],[11,"as_c_str","","Extracts a [`CStr`] slice containing the entire string.",49,[[["self"]],["cstr"]]],[11,"into_boxed_c_str","","Converts this `CString` into a boxed [`CStr`].",49,[[["self"]],["box",["cstr"]]]],[11,"into_cstring","","Consumes this error, returning original [`CString`] which generated the error.",50,[[["self"]],["cstring"]]],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",50,[[["self"]],["utf8error"]]],[11,"from_ptr","","Wraps a raw C string with a safe C string wrapper.",52,N],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",52,N],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",52,N],[11,"as_ptr","","Returns the inner pointer to this C string.",52,N],[11,"to_bytes","","Converts this C string to a byte slice.",52,N],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",52,N],[11,"to_str","","Yields a [`&str`] slice if the `CStr` contains valid UTF-8.",52,[[["self"]],["result",["str","utf8error"]]]],[11,"to_string_lossy","","Converts a `CStr` into a [`Cow`]`<`[`str`]`>`.",52,[[["self"]],["cow",["str"]]]],[11,"into_c_string","","Converts a [`Box`]`<CStr>` into a [`CString`] without copying or allocating.",52,[[["box",["cstr"]]],["cstring"]]],[18,"NAME","eosio","",19,N],[11,"read_data","","",19,[[],["result",["readerror"]]]],[11,"to_action","","",19,[[["self"],["vec",["permission"]]],["action"]]],[11,"send_inline","","",19,[[["self"],["vec",["permission"]]],["result",["writeerror"]]]],[18,"NAME","","",25,N],[11,"secondary_keys","","",25,N],[11,"table","","",25,[[["c"],["s"]],["primarytableindex"]]],[11,"upsert","","",28,[[["self"],["accountname"],["tablescope"],["secondarytablename"],["accountname"],["u64"]]]]],"paths":[[4,"ParseNameError"],[4,"ParseSymbolError"],[3,"Permission"],[3,"Action"],[3,"Asset"],[3,"ExtendedAsset"],[3,"ExtendedSymbol"],[4,"ReadError"],[4,"WriteError"],[3,"AccountName"],[3,"SymbolName"],[3,"Symbol"],[3,"PrimaryTableIndex"],[3,"SecondaryTableName"],[3,"SecondaryTableIndex"],[3,"Time"],[3,"capi_checksum256"],[3,"capi_checksum160"],[3,"capi_checksum512"],[8,"ActionFn"],[8,"Assert"],[8,"Read"],[8,"Write"],[8,"Hasher"],[8,"Print"],[8,"TableRow"],[8,"TableCursor"],[8,"TableIndex"],[8,"SecondaryTableKey"],[3,"PermissionName"],[3,"RamBytes"],[3,"NetWeight"],[3,"CpuWeight"],[3,"ActionName"],[3,"ActionId"],[3,"Ripemd160"],[3,"Sha1"],[3,"Sha256"],[3,"Sha512"],[3,"TableScope"],[3,"PrimaryTableName"],[3,"PrimaryTableCursor"],[3,"PrimaryTableIterator"],[3,"SecondaryTableCursor"],[3,"SecondaryTableIterator"],[3,"TimeSpan"],[3,"OsStr"],[3,"NulError"],[3,"OsString"],[3,"CString"],[3,"IntoStringError"],[3,"FromBytesWithNulError"],[3,"CStr"],[4,"c_void"]]};
searchIndex["eosio_macros"]={"doc":"","items":[[14,"eosio_abi","eosio_macros","",N,N],[23,"eosio_action","","",N,N],[14,"eosio_name","","",N,N],[14,"eosio_print","","",N,N],[23,"eosio_struct","","",N,N],[23,"eosio_table","","",N,N],[14,"n","","",N,N],[14,"s","","",N,N],[24,"Write","","",N,N],[24,"Read","","",N,N],[24,"TableRow","","",N,N]],"paths":[]};
searchIndex["eosio_sys"]={"doc":"","items":[[3,"capi_checksum256","eosio_sys","@brief 256-bit hash @details 256-bit hash",N,N],[12,"hash","","",0,N],[3,"capi_checksum160","","@brief 160-bit hash @details 160-bit hash",N,N],[12,"hash","","",1,N],[12,"__bindgen_padding_0","","",1,N],[3,"capi_checksum512","","@brief 512-bit hash @details 512-bit hash",N,N],[12,"hash","","",2,N],[4,"ParseNameError","","",N,N],[13,"IsEmpty","","",3,N],[13,"TooLong","","",3,N],[13,"BadChar","","",3,N],[4,"ParseSymbolError","","",N,N],[13,"IsEmpty","","",4,N],[13,"TooLong","","",4,N],[13,"BadChar","","",4,N],[5,"string_to_name","","",N,[[["str"]],["result",["u64","parsenameerror"]]]],[5,"name_to_string","","",N,[[["u64"]],["string"]]],[5,"string_to_symbol","","",N,[[["u8"],["str"]],["result",["u64","parsesymbolerror"]]]],[5,"symbol_name_length","","",N,[[["u64"]],["usize"]]],[5,"eosio_assert","","Aborts processing of this action and unwinds all pending changes if the test condition is true @brief Aborts processing of this action and unwinds all pending changes @param test - 0 to abort, 1 to ignore",N,N],[5,"eosio_assert_message","","Aborts processing of this action and unwinds all pending changes if the test condition is true @brief Aborts processing of this action and unwinds all pending changes @param test - 0 to abort, 1 to ignore @param msg - a pointer to the start of string explaining the reason for failure @param msg_len - length of the string",N,N],[5,"eosio_assert_code","","Aborts processing of this action and unwinds all pending changes if the test condition is true @brief Aborts processing of this action and unwinds all pending changes @param test - 0 to abort, 1 to ignore @param code - the error code",N,N],[5,"eosio_exit","","This method will abort execution of wasm without failing the contract. This is used to bypass all cleanup / destructors that would normally be called. @brief Aborts execution of wasm without failing the contract @param code - the exit code Example:",N,N],[5,"current_time","","Returns the time in microseconds from 1970 of the current block @brief Get time of the current block (i.e. the block including this action) @return time in microseconds from 1970 of the current block",N,N],[5,"read_action_data","","Copy up to @ref len bytes of current action data to the specified location",N,N],[5,"action_data_size","","Get the length of the current action's data field. This method is useful for dynamically sized actions",N,N],[5,"require_recipient","","Add the specified account to set of accounts to be notified",N,N],[5,"require_auth","","Verifies that @ref name exists in the set of provided auths on a action. Throws if not found.",N,N],[5,"has_auth","","Verifies that @ref name has auth.",N,N],[5,"require_auth2","","Verifies that @ref name exists in the set of provided auths on a action. Throws if not found.",N,N],[5,"is_account","","",N,N],[5,"send_inline","","Send an inline action in the context of this action's parent transaction",N,N],[5,"send_context_free_inline","","Send an inline context free action in the context of this action's parent transaction",N,N],[5,"publication_time","","Returns the time in microseconds from 1970 of the publication_time @brief Get the publication time @return the time in microseconds from 1970 of the publication_time",N,N],[5,"current_receiver","","Get the current receiver of the action @brief Get the current receiver of the action @return the account which specifies the current receiver of the action",N,N],[5,"get_active_producers","","Gets the set of active producers. @brief Gets the set of active producers.",N,N],[5,"assert_sha256","","Tests if the sha256 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. @brief Tests if the sha256 hash generated from data matches the provided checksum.",N,N],[5,"assert_sha1","","Tests if the sha1 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. @brief Tests if the sha1 hash generated from data matches the provided checksum.",N,N],[5,"assert_sha512","","Tests if the sha512 hash generated from data matches the provided checksum. This method is optimized to a NO-OP when in fast evaluation mode. @brief Tests if the sha512 hash generated from data matches the provided checksum.",N,N],[5,"assert_ripemd160","","Tests if the ripemod160 hash generated from data matches the provided checksum. @brief Tests if the ripemod160 hash generated from data matches the provided checksum.",N,N],[5,"sha256","","Hashes `data` using `sha256` and stores result in memory pointed to by hash. @brief Hashes `data` using `sha256` and stores result in memory pointed to by hash.",N,N],[5,"sha1","","Hashes `data` using `sha1` and stores result in memory pointed to by hash. @brief Hashes `data` using `sha1` and stores result in memory pointed to by hash.",N,N],[5,"sha512","","Hashes `data` using `sha512` and stores result in memory pointed to by hash. @brief Hashes `data` using `sha512` and stores result in memory pointed to by hash.",N,N],[5,"ripemd160","","Hashes `data` using `ripemod160` and stores result in memory pointed to by hash. @brief Hashes `data` using `ripemod160` and stores result in memory pointed to by hash.",N,N],[5,"recover_key","","Calculates the public key used for a given signature and hash used to create a message. @brief Calculates the public key used for a given signature and hash used to create a message.",N,N],[5,"assert_recover_key","","Tests a given public key with the generated key from digest and the signature. @brief Tests a given public key with the generated key from digest and the signature.",N,N],[5,"db_store_i64","","Store a record in a primary 64-bit integer index table",N,N],[5,"db_update_i64","","Update a record in a primary 64-bit integer index table",N,N],[5,"db_remove_i64","","Remove a record from a primary 64-bit integer index table",N,N],[5,"db_get_i64","","Get a record in a primary 64-bit integer index table",N,N],[5,"db_next_i64","","Find the table row following the referenced table row in a primary 64-bit integer index table",N,N],[5,"db_previous_i64","","Find the table row preceding the referenced table row in a primary 64-bit integer index table",N,N],[5,"db_find_i64","","Find a table row in a primary 64-bit integer index table by primary key",N,N],[5,"db_lowerbound_i64","","Find the table row in a primary 64-bit integer index table that matches the lowerbound condition for a given primary key The table row that matches the lowerbound condition is the first table row in the table with the lowest primary key that is >= the given key",N,N],[5,"db_upperbound_i64","","Find the table row in a primary 64-bit integer index table that matches the upperbound condition for a given primary key The table row that matches the upperbound condition is the first table row in the table with the lowest primary key that is > the given key",N,N],[5,"db_end_i64","","Get an iterator representing just-past-the-end of the last table row of a primary 64-bit integer index table",N,N],[5,"db_idx64_store","","Store an association of a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table",N,N],[5,"db_idx64_update","","Update an association for a 64-bit integer secondary key to a primary key in a secondary 64-bit integer index table",N,N],[5,"db_idx64_remove","","Remove a table row from a secondary 64-bit integer index table",N,N],[5,"db_idx64_next","","Find the table row following the referenced table row in a secondary 64-bit integer index table",N,N],[5,"db_idx64_previous","","Find the table row preceding the referenced table row in a secondary 64-bit integer index table",N,N],[5,"db_idx64_find_primary","","Find a table row in a secondary 64-bit integer index table by primary key",N,N],[5,"db_idx64_find_secondary","","Find a table row in a secondary 64-bit integer index table by secondary key",N,N],[5,"db_idx64_lowerbound","","Find the table row in a secondary 64-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key",N,N],[5,"db_idx64_upperbound","","Find the table row in a secondary 64-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key",N,N],[5,"db_idx64_end","","Get an end iterator representing just-past-the-end of the last table row of a secondary 64-bit integer index table",N,N],[5,"db_idx128_store","","Store an association of a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table",N,N],[5,"db_idx128_update","","Update an association for a 128-bit integer secondary key to a primary key in a secondary 128-bit integer index table",N,N],[5,"db_idx128_remove","","Remove a table row from a secondary 128-bit integer index table",N,N],[5,"db_idx128_next","","Find the table row following the referenced table row in a secondary 128-bit integer index table",N,N],[5,"db_idx128_previous","","Find the table row preceding the referenced table row in a secondary 128-bit integer index table",N,N],[5,"db_idx128_find_primary","","Find a table row in a secondary 128-bit integer index table by primary key",N,N],[5,"db_idx128_find_secondary","","Find a table row in a secondary 128-bit integer index table by secondary key",N,N],[5,"db_idx128_lowerbound","","Find the table row in a secondary 128-bit integer index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key",N,N],[5,"db_idx128_upperbound","","Find the table row in a secondary 128-bit integer index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key",N,N],[5,"db_idx128_end","","Get an end iterator representing just-past-the-end of the last table row of a secondary 128-bit integer index table",N,N],[5,"db_idx256_store","","Store an association of a 256-bit secondary key to a primary key in a secondary 256-bit index table",N,N],[5,"db_idx256_update","","Update an association for a 256-bit secondary key to a primary key in a secondary 256-bit index table",N,N],[5,"db_idx256_remove","","Remove a table row from a secondary 256-bit index table",N,N],[5,"db_idx256_next","","Find the table row following the referenced table row in a secondary 256-bit index table",N,N],[5,"db_idx256_previous","","Find the table row preceding the referenced table row in a secondary 256-bit index table",N,N],[5,"db_idx256_find_primary","","Find a table row in a secondary 256-bit index table by primary key",N,N],[5,"db_idx256_find_secondary","","Find a table row in a secondary 256-bit index table by secondary key",N,N],[5,"db_idx256_lowerbound","","Find the table row in a secondary 256-bit index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key (uses lexicographical ordering on the 256-bit keys)",N,N],[5,"db_idx256_upperbound","","Find the table row in a secondary 256-bit index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key (uses lexicographical ordering on the 256-bit keys)",N,N],[5,"db_idx256_end","","Get an end iterator representing just-past-the-end of the last table row of a secondary 256-bit index table",N,N],[5,"db_idx_double_store","","Store an association of a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table",N,N],[5,"db_idx_double_update","","Update an association for a double-precision floating-point secondary key to a primary key in a secondary double-precision floating-point index table",N,N],[5,"db_idx_double_remove","","Remove a table row from a secondary double-precision floating-point index table",N,N],[5,"db_idx_double_next","","Find the table row following the referenced table row in a secondary double-precision floating-point index table",N,N],[5,"db_idx_double_previous","","Find the table row preceding the referenced table row in a secondary double-precision floating-point index table",N,N],[5,"db_idx_double_find_primary","","Find a table row in a secondary double-precision floating-point index table by primary key",N,N],[5,"db_idx_double_find_secondary","","Find a table row in a secondary double-precision floating-point index table by secondary key",N,N],[5,"db_idx_double_lowerbound","","Find the table row in a secondary double-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key",N,N],[5,"db_idx_double_upperbound","","Find the table row in a secondary double-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key",N,N],[5,"db_idx_double_end","","Get an end iterator representing just-past-the-end of the last table row of a secondary double-precision floating-point index table",N,N],[5,"db_idx_long_double_store","","Store an association of a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table",N,N],[5,"db_idx_long_double_update","","Update an association for a quadruple-precision floating-point secondary key to a primary key in a secondary quadruple-precision floating-point index table",N,N],[5,"db_idx_long_double_remove","","Remove a table row from a secondary quadruple-precision floating-point index table",N,N],[5,"db_idx_long_double_next","","Find the table row following the referenced table row in a secondary quadruple-precision floating-point index table",N,N],[5,"db_idx_long_double_previous","","Find the table row preceding the referenced table row in a secondary quadruple-precision floating-point index table",N,N],[5,"db_idx_long_double_find_primary","","Find a table row in a secondary quadruple-precision floating-point index table by primary key",N,N],[5,"db_idx_long_double_find_secondary","","Find a table row in a secondary quadruple-precision floating-point index table by secondary key",N,N],[5,"db_idx_long_double_lowerbound","","Find the table row in a secondary quadruple-precision floating-point index table that matches the lowerbound condition for a given secondary key The table row that matches the lowerbound condition is the first table row in the table with the lowest secondary key that is >= the given key",N,N],[5,"db_idx_long_double_upperbound","","Find the table row in a secondary quadruple-precision floating-point index table that matches the upperbound condition for a given secondary key The table row that matches the upperbound condition is the first table row in the table with the lowest secondary key that is > the given key",N,N],[5,"db_idx_long_double_end","","Get an end iterator representing just-past-the-end of the last table row of a secondary quadruple-precision floating-point index table",N,N],[5,"check_transaction_authorization","","@brief Checks if a transaction is authorized by a provided set of keys and permissions",N,N],[5,"check_permission_authorization","","@brief Checks if a permission is authorized by a provided delay and a provided set of keys and permissions",N,N],[5,"get_permission_last_used","","@brief Returns the last used time of a permission",N,N],[5,"get_account_creation_time","","@brief Returns the creation time of an account",N,N],[5,"prints","","Prints string @brief Prints string @param cstr - a null terminated string",N,N],[5,"prints_l","","Prints string up to given length @brief Prints string @param cstr - pointer to string @param len - len of string to be printed",N,N],[5,"printi","","Prints value as a 64 bit signed integer @brief Prints value as a 64 bit signed integer @param value of 64 bit signed integer to be printed",N,N],[5,"printui","","Prints value as a 64 bit unsigned integer @brief Prints value as a 64 bit unsigned integer @param value of 64 bit unsigned integer to be printed",N,N],[5,"printi128","","Prints value as a 128 bit signed integer @brief Prints value as a 128 bit signed integer @param value is a pointer to the 128 bit signed integer to be printed",N,N],[5,"printui128","","Prints value as a 128 bit unsigned integer @brief Prints value as a 128 bit unsigned integer @param value is a pointer to the 128 bit unsigned integer to be printed",N,N],[5,"printsf","","Prints value as single-precision floating point number @brief Prints value as single-precision floating point number (i.e. float) @param value of float to be printed",N,N],[5,"printdf","","Prints value as double-precision floating point number @brief Prints value as double-precision floating point number (i.e. double) @param value of double to be printed",N,N],[5,"printqf","","Prints value as quadruple-precision floating point number @brief Prints value as quadruple-precision floating point number (i.e. long double) @param value is a pointer to the long double to be printed",N,N],[5,"printn","","Prints a 64 bit names as base32 encoded string @brief Prints a 64 bit names as base32 encoded string @param name - 64 bit name to be printed",N,N],[5,"printhex","","",N,N],[5,"get_resource_limits","","@brief Get the resource limits of an account Get the resource limits of an account @param account - name of the account whose resource limit to get @param ram_bytes - pointer to `int64_t` to hold retrieved ram limit in absolute bytes @param net_weight - pointer to `int64_t` to hold net limit @param cpu_weight - pointer to `int64_t` to hold cpu limit",N,N],[5,"set_resource_limits","","@brief Set the resource limits of an account Set the resource limits of an account @param account - name of the account whose resource limit to be set @param ram_bytes - ram limit in absolute bytes @param net_weight - fractionally proportionate net limit of available resources based on (weight / total_weight_of_all_accounts) @param cpu_weight - fractionally proportionate cpu limit of available resources based on (weight / total_weight_of_all_accounts)",N,N],[5,"set_proposed_producers","","Proposes a schedule change, once the block that contains the proposal becomes irreversible, the schedule is promoted to \"pending\" automatically. Once the block that promotes the schedule is irreversible, the schedule will become \"active\" @param producer_data - packed data of produce_keys in the appropriate producer schedule order @param producer_data_size - size of the data buffer",N,N],[5,"set_active_producers","","@brief Set new active producers Set new active producers. Producers will only be activated once the block which starts the next round is irrreversible @param producer_data - pointer to producer schedule packed as bytes @param producer_data_size - size of the packed producer schedule @pre `producer_data` is a valid pointer to a range of memory at least `producer_data_size` bytes long that contains serialized produced schedule data",N,N],[5,"is_privileged","","@brief Check if an account is privileged Check if an account is privileged @param account - name of the account to be checked @return true if the account is privileged @return false if the account is not privileged",N,N],[5,"set_privileged","","@brief Set the privileged status of an account Set the privileged status of an account @param account - name of the account whose privileged account to be set @param is_priv - privileged status",N,N],[5,"set_blockchain_parameters_packed","","@brief Set the blockchain parameters Set the blockchain parameters @param data - pointer to blockchain parameters packed as bytes @param datalen - size of the packed blockchain parameters @pre `data` is a valid pointer to a range of memory at least `datalen` bytes long that contains packed blockchain params data",N,N],[5,"get_blockchain_parameters_packed","","@brief Retrieve the blolckchain parameters Retrieve the blolckchain parameters @param data - output buffer of the blockchain parameters, only retrieved if sufficent size to hold packed data. @param datalen - size of the data buffer, 0 to report required size. @return size of the blockchain parameters @pre `data` is a valid pointer to a range of memory at least `datalen` bytes long @post `data` is filled with packed blockchain parameters",N,N],[5,"activate_feature","","@brief Activate new feature Activate new feature @param f - name (identifier) of the feature to be activated",N,N],[5,"send_deferred","","Sends a deferred transaction.",N,N],[5,"cancel_deferred","","Cancels a deferred transaction.",N,N],[5,"read_transaction","","Access a copy of the currently executing transaction.",N,N],[5,"transaction_size","","Gets the size of the currently executing transaction.",N,N],[5,"tapos_block_num","","Gets the block number used for TAPOS on the currently executing transaction.",N,N],[5,"tapos_block_prefix","","Gets the block prefix used for TAPOS on the currently executing transaction.",N,N],[5,"expiration","","Gets the expiration of the currently executing transaction.",N,N],[5,"get_action","","Retrieves the indicated action from the active transaction.",N,N],[5,"get_context_free_data","","Retrieve the signed_transaction.context_free_data[index].",N,N],[0,"ctypes","","",N,N],[3,"OsStr","eosio_sys::ctypes","Borrowed reference to an OS string (see [`OsString`]).",N,N],[3,"NulError","","An error indicating that an interior nul byte was found.",N,N],[4,"c_void","","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"OsString","","A type that can represent owned, mutable platform-native strings, but is cheaply inter-convertible with Rust strings.",N,N],[3,"CString","","A type representing an owned, C-compatible, nul-terminated string with no nul bytes in the middle.",N,N],[3,"IntoStringError","","An error indicating invalid UTF-8 when converting a [`CString`] into a [`String`].",N,N],[3,"FromBytesWithNulError","","An error indicating that a nul byte was not in the expected position.",N,N],[3,"CStr","","Representation of a borrowed C string.",N,N],[4,"c_void","","",N,N],[6,"int128_t","","",N,N],[6,"uint128_t","","",N,N],[6,"c_char","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_short","","",N,N],[6,"c_longlong","","",N,N],[6,"c_uchar","","",N,N],[6,"c_ushort","","",N,N],[6,"c_ulonglong","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"uint128_t","eosio_sys","",N,N],[6,"int128_t","","",N,N],[6,"capi_name","","",N,N],[17,"NAME_CHARS","","",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","eosio_sys::ctypes","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"index","","",9,[[["self"],["rangefull"]],["cstr"]]],[11,"index","","",8,[[["self"],["rangefull"]],["osstr"]]],[11,"default","","Creates an empty `CString`.",9,[[],["cstring"]]],[11,"default","","Constructs an empty `OsString`.",8,[[],["osstring"]]],[11,"eq","","",5,[[["self"],["path"]],["bool"]]],[11,"eq","","",8,[[["self"],["str"]],["bool"]]],[11,"eq","","",5,[[["self"],["pathbuf"]],["bool"]]],[11,"eq","","",8,[[["self"],["str"]],["bool"]]],[11,"eq","","",8,[[["self"],["path"]],["bool"]]],[11,"eq","","",5,[[["self"],["cow"]],["bool"]]],[11,"eq","","",6,[[["self"],["nulerror"]],["bool"]]],[11,"ne","","",6,[[["self"],["nulerror"]],["bool"]]],[11,"eq","","",11,[[["self"],["frombyteswithnulerror"]],["bool"]]],[11,"ne","","",11,[[["self"],["frombyteswithnulerror"]],["bool"]]],[11,"eq","","",8,[[["self"],["path"]],["bool"]]],[11,"eq","","",9,[[["self"],["cstring"]],["bool"]]],[11,"ne","","",9,[[["self"],["cstring"]],["bool"]]],[11,"eq","","",8,[[["self"],["cow"]],["bool"]]],[11,"eq","","",8,[[["self"],["osstr"]],["bool"]]],[11,"eq","","",5,[[["self"],["osstring"]],["bool"]]],[11,"eq","","",12,[[["self"],["cstr"]],["bool"]]],[11,"eq","","",8,[[["self"],["cow"]],["bool"]]],[11,"eq","","",10,[[["self"],["intostringerror"]],["bool"]]],[11,"ne","","",10,[[["self"],["intostringerror"]],["bool"]]],[11,"eq","","",8,[[["self"],["pathbuf"]],["bool"]]],[11,"eq","","",5,[[["self"],["cow"]],["bool"]]],[11,"eq","","",5,[[["self"],["str"]],["bool"]]],[11,"eq","","",5,[[["self"],["path"]],["bool"]]],[11,"eq","","",8,[[["self"],["osstring"]],["bool"]]],[11,"eq","","",5,[[["self"],["osstr"]],["bool"]]],[11,"eq","","",8,[[["self"],["osstr"]],["bool"]]],[11,"hash","","",9,N],[11,"hash","","",8,N],[11,"hash","","",5,N],[11,"hash","","",12,N],[11,"from","","",8,[[["pathbuf"]],["osstring"]]],[11,"from","","",9,[[["cstr"]],["cstring"]]],[11,"from","","",9,[[["cow",["cstr"]]],["cstring"]]],[11,"from","","Converts a `Box<OsStr>` into a `OsString` without copying or allocating.",8,[[["box",["osstr"]]],["osstring"]]],[11,"from","","Converts a [`String`] into a [`OsString`].",8,[[["string"]],["osstring"]]],[11,"from","","",8,[[["t"]],["osstring"]]],[11,"from","","Converts a [`Box`]`<CStr>` into a [`CString`] without copying or allocating.",9,[[["box",["cstr"]]],["cstring"]]],[11,"from","","",8,[[["cow",["osstr"]]],["osstring"]]],[11,"from","","",8,[[["defaultenvkey"]],["osstring"]]],[11,"partial_cmp","","",5,[[["self"],["osstr"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["osstr"]],["bool"]]],[11,"le","","",5,[[["self"],["osstr"]],["bool"]]],[11,"gt","","",5,[[["self"],["osstr"]],["bool"]]],[11,"ge","","",5,[[["self"],["osstr"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["path"]],["option",["ordering"]]]],[11,"partial_cmp","","",8,[[["self"],["osstr"]],["option",["ordering"]]]],[11,"partial_cmp","","",8,[[["self"],["cow"]],["option",["ordering"]]]],[11,"partial_cmp","","",5,[[["self"],["path"]],["option",["ordering"]]]],[11,"partial_cmp","","",5,[[["self"],["osstring"]],["option",["ordering"]]]],[11,"partial_cmp","","",5,[[["self"],["cow"]],["option",["ordering"]]]],[11,"partial_cmp","","",8,[[["self"],["cow"]],["option",["ordering"]]]],[11,"partial_cmp","","",12,[[["self"],["cstr"]],["option",["ordering"]]]],[11,"partial_cmp","","",8,[[["self"],["pathbuf"]],["option",["ordering"]]]],[11,"partial_cmp","","",5,[[["self"],["cow"]],["option",["ordering"]]]],[11,"partial_cmp","","",5,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",5,[[["self"],["pathbuf"]],["option",["ordering"]]]],[11,"partial_cmp","","",9,[[["self"],["cstring"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["cstring"]],["bool"]]],[11,"le","","",9,[[["self"],["cstring"]],["bool"]]],[11,"gt","","",9,[[["self"],["cstring"]],["bool"]]],[11,"ge","","",9,[[["self"],["cstring"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["path"]],["option",["ordering"]]]],[11,"partial_cmp","","",8,[[["self"],["osstr"]],["option",["ordering"]]]],[11,"partial_cmp","","",8,[[["self"],["osstring"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["osstring"]],["bool"]]],[11,"le","","",8,[[["self"],["osstring"]],["bool"]]],[11,"gt","","",8,[[["self"],["osstring"]],["bool"]]],[11,"ge","","",8,[[["self"],["osstring"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",8,[[["self"],["path"]],["option",["ordering"]]]],[11,"deref","","",8,[[["self"]],["osstr"]]],[11,"deref","","",9,[[["self"]],["cstr"]]],[11,"drop","","",9,N],[11,"description","","",11,[[["self"]],["str"]]],[11,"description","","",10,[[["self"]],["str"]]],[11,"cause","","",10,[[["self"]],["option",["error"]]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"cmp","","",12,[[["self"],["cstr"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["cstring"]],["ordering"]]],[11,"cmp","","",8,[[["self"],["osstring"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["osstr"]],["ordering"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",9,[[["self"]],["cstring"]]],[11,"clone","","",10,[[["self"]],["intostringerror"]]],[11,"clone","","",11,[[["self"]],["frombyteswithnulerror"]]],[11,"clone","","",8,[[["self"]],["osstring"]]],[11,"clone","","",6,[[["self"]],["nulerror"]]],[11,"from_bytes","","",5,N],[11,"as_bytes","","",5,N],[11,"from_vec","","",8,[[["vec",["u8"]]],["osstring"]]],[11,"into_vec","","",8,[[["self"]],["vec",["u8"]]]],[11,"borrow","","",8,[[["self"]],["osstr"]]],[11,"borrow","","",9,[[["self"]],["cstr"]]],[11,"to_owned","","",5,[[["self"]],["osstring"]]],[11,"clone_into","","",5,N],[11,"to_owned","","",12,[[["self"]],["cstring"]]],[11,"as_ref","","",8,[[["self"]],["path"]]],[11,"as_ref","","",5,[[["self"]],["osstr"]]],[11,"as_ref","","",8,[[["self"]],["osstr"]]],[11,"as_ref","","",9,[[["self"]],["cstr"]]],[11,"as_ref","","",12,[[["self"]],["cstr"]]],[11,"as_ref","","",5,[[["self"]],["path"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"partial_cmp","eosio_sys","",0,[[["self"],["capi_checksum256"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["capi_checksum256"]],["bool"]]],[11,"le","","",0,[[["self"],["capi_checksum256"]],["bool"]]],[11,"gt","","",0,[[["self"],["capi_checksum256"]],["bool"]]],[11,"ge","","",0,[[["self"],["capi_checksum256"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["capi_checksum160"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["capi_checksum160"]],["bool"]]],[11,"le","","",1,[[["self"],["capi_checksum160"]],["bool"]]],[11,"gt","","",1,[[["self"],["capi_checksum160"]],["bool"]]],[11,"ge","","",1,[[["self"],["capi_checksum160"]],["bool"]]],[11,"default","","",0,[[],["capi_checksum256"]]],[11,"default","","",1,[[],["capi_checksum160"]]],[11,"default","","",2,[[],["self"]]],[11,"cmp","","",0,[[["self"],["capi_checksum256"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["capi_checksum160"]],["ordering"]]],[11,"eq","","",0,[[["self"],["capi_checksum256"]],["bool"]]],[11,"ne","","",0,[[["self"],["capi_checksum256"]],["bool"]]],[11,"eq","","",1,[[["self"],["capi_checksum160"]],["bool"]]],[11,"ne","","",1,[[["self"],["capi_checksum160"]],["bool"]]],[11,"eq","","",3,[[["self"],["parsenameerror"]],["bool"]]],[11,"ne","","",3,[[["self"],["parsenameerror"]],["bool"]]],[11,"eq","","",4,[[["self"],["parsesymbolerror"]],["bool"]]],[11,"ne","","",4,[[["self"],["parsesymbolerror"]],["bool"]]],[11,"clone","","",0,[[["self"]],["capi_checksum256"]]],[11,"clone","","",1,[[["self"]],["capi_checksum160"]]],[11,"clone","","",2,[[["self"]],["capi_checksum512"]]],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"new","eosio_sys::ctypes","Coerces into an `OsStr` slice.",5,[[["s"]],["osstr"]]],[11,"to_str","","Yields a [`&str`] slice if the `OsStr` is valid Unicode.",5,[[["self"]],["option",["str"]]]],[11,"to_string_lossy","","Converts an `OsStr` to a [`Cow`]`<`[`str`]`>`.",5,[[["self"]],["cow",["str"]]]],[11,"to_os_string","","Copies the slice into an owned [`OsString`].",5,[[["self"]],["osstring"]]],[11,"is_empty","","Checks whether the `OsStr` is empty.",5,[[["self"]],["bool"]]],[11,"len","","Returns the length of this `OsStr`.",5,[[["self"]],["usize"]]],[11,"into_os_string","","Converts a [`Box`]`<OsStr>` into an [`OsString`] without copying or allocating.",5,[[["box",["osstr"]]],["osstring"]]],[11,"nul_position","","Returns the position of the nul byte in the slice that caused [`CString::new`] to fail.",6,[[["self"]],["usize"]]],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which generated the error in the first place.",6,[[["self"]],["vec",["u8"]]]],[11,"new","","Constructs a new empty `OsString`.",8,[[],["osstring"]]],[11,"as_os_str","","Converts to an [`OsStr`] slice.",8,[[["self"]],["osstr"]]],[11,"into_string","","Converts the `OsString` into a [`String`] if it contains valid Unicode data.",8,[[["self"]],["result",["string","osstring"]]]],[11,"push","","Extends the string with the given [`&OsStr`] slice.",8,N],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",8,[[["usize"]],["osstring"]]],[11,"clear","","Truncates the `OsString` to zero length.",8,N],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",8,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted in the given `OsString`.",8,N],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to be inserted in the given `OsString`. Does nothing if the capacity is already sufficient.",8,N],[11,"shrink_to_fit","","Shrinks the capacity of the `OsString` to match its length.",8,N],[11,"shrink_to","","Shrinks the capacity of the `OsString` with a lower bound.",8,N],[11,"into_boxed_os_str","","Converts this `OsString` into a boxed [`OsStr`].",8,[[["self"]],["box",["osstr"]]]],[11,"new","","Creates a new C-compatible string from a container of bytes.",9,[[["t"]],["result",["cstring","nulerror"]]]],[11,"from_vec_unchecked","","Creates a C-compatible string by consuming a byte vector, without checking for interior 0 bytes.",9,[[["vec",["u8"]]],["cstring"]]],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C via [`into_raw`].",9,N],[11,"into_raw","","Consumes the `CString` and transfers ownership of the string to a C caller.",9,N],[11,"into_string","","Converts the `CString` into a [`String`] if it contains valid UTF-8 data.",9,[[["self"]],["result",["string","intostringerror"]]]],[11,"into_bytes","","Consumes the `CString` and returns the underlying byte buffer.",9,[[["self"]],["vec",["u8"]]]],[11,"into_bytes_with_nul","","Equivalent to the [`into_bytes`] function except that the returned vector includes the trailing nul terminator.",9,[[["self"]],["vec",["u8"]]]],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",9,N],[11,"as_bytes_with_nul","","Equivalent to the [`as_bytes`] function except that the returned slice includes the trailing nul terminator.",9,N],[11,"as_c_str","","Extracts a [`CStr`] slice containing the entire string.",9,[[["self"]],["cstr"]]],[11,"into_boxed_c_str","","Converts this `CString` into a boxed [`CStr`].",9,[[["self"]],["box",["cstr"]]]],[11,"into_cstring","","Consumes this error, returning original [`CString`] which generated the error.",10,[[["self"]],["cstring"]]],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",10,[[["self"]],["utf8error"]]],[11,"from_ptr","","Wraps a raw C string with a safe C string wrapper.",12,N],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",12,N],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",12,N],[11,"as_ptr","","Returns the inner pointer to this C string.",12,N],[11,"to_bytes","","Converts this C string to a byte slice.",12,N],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",12,N],[11,"to_str","","Yields a [`&str`] slice if the `CStr` contains valid UTF-8.",12,[[["self"]],["result",["str","utf8error"]]]],[11,"to_string_lossy","","Converts a `CStr` into a [`Cow`]`<`[`str`]`>`.",12,[[["self"]],["cow",["str"]]]],[11,"into_c_string","","Converts a [`Box`]`<CStr>` into a [`CString`] without copying or allocating.",12,[[["box",["cstr"]]],["cstring"]]]],"paths":[[3,"capi_checksum256"],[3,"capi_checksum160"],[3,"capi_checksum512"],[4,"ParseNameError"],[4,"ParseSymbolError"],[3,"OsStr"],[3,"NulError"],[4,"c_void"],[3,"OsString"],[3,"CString"],[3,"IntoStringError"],[3,"FromBytesWithNulError"],[3,"CStr"],[4,"c_void"]]};
initSearch(searchIndex);
